/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
package sinemabiletiotomasyunu;


import java.awt.Color;
import java.awt.Cursor;
import java.awt.GridLayout;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JButton;
import javax.swing.JDialog;
import static javax.swing.JOptionPane.showMessageDialog;
import javax.swing.SwingWorker;


/**
 *
 * @author AS
 */
public class Satis extends javax.swing.JFrame{
    //database
    private PreparedStatement preparedStatement = null;
    private PreparedStatement preparedStatement1 = null;
    private PreparedStatement preparedStatement2 = null;
    private PreparedStatement preparedStatement3 = null;
    private PreparedStatement preparedStatement4 = null;
    private PreparedStatement preparedStatement5 = null;
    private ResultSet resultSet = null;
    private ResultSet resultSet1 = null;
    private ResultSet resultSet2 = null;
    private ResultSet resultSet3 = null;
    private ResultSet resultSet4 = null;
    private ResultSet resultSet5 = null;
    
    
    //----------
    public int koltukRows= 5;
    public int koltukColomns= 5;
    public int salonNo = 5;
    int sn;
    int bs = 0;
    float filmFiyati;
    public boolean isfirst = true;
    
    
    ArrayList<String> seciliKoltuklar = new ArrayList<>();
    ArrayList<String> doluKoltuklar = new ArrayList<>();
    ArrayList<String> isimler = new ArrayList<>();
    ArrayList<String> filmler = new ArrayList<>();
    ArrayList<String> seanslar = new ArrayList<>();
    public boolean isSecili = false;
    public int curSeansNo;
    String alfabe[] = {"A","B","C","D","E","F","G","H","I","J","K","L","M","N","O","P","R","S","T","U","V","Y","Z"};
    public GridLayout grid;
    JDialog yd;
    
    private Task task;
    private Task1 task1;
    
    
    void bilgileriGuncelle() throws SQLException{
        preparedStatement = main.conn
                .prepareStatement("SELECT * from film");
        resultSet = preparedStatement.executeQuery();
        while(resultSet.next())
        {
            
            filmCB.addItem(resultSet.getString(1));
            
        }
        
    }
    /**
     * Creates new form Satis
     */
    public Satis() {
        
      
        initComponents();
        
        yukleniyor.setVisible(false);
        /*grid = new java.awt.GridLayout(koltukRows, koltukColomns);
        koltuklar.setLayout(grid);*/
        try {
            bilgileriGuncelle();
        } catch (SQLException ex) {
            Logger.getLogger(Satis.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel3 = new javax.swing.JPanel();
        koltuklar = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        filmCB = new javax.swing.JComboBox();
        jLabel2 = new javax.swing.JLabel();
        seansCB = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        biletSayisi = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        SalonNo = new javax.swing.JTextField();
        islemiTamamla = new javax.swing.JButton();
        anamenu = new javax.swing.JButton();
        kapat = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        toplam = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        fiyat = new javax.swing.JTextField();
        goster = new javax.swing.JButton();
        yukleniyor = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        perde = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        jPanel3.setBackground(new java.awt.Color(255, 255, 255));

        koltuklar.setBackground(new java.awt.Color(255, 255, 255));
        koltuklar.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        koltuklar.setLayout(null);

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setText("Film :");

        filmCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "" }));
        filmCB.setToolTipText("");
        filmCB.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                filmCBİtemStateChanged(evt);
            }
        });

        jLabel2.setText("Seans :");

        seansCB.setModel(new javax.swing.DefaultComboBoxModel(new String[] { " " }));

        jLabel3.setText("Bilet Sayısı :");

        biletSayisi.setEditable(false);

        jLabel4.setText("Salon no :");

        SalonNo.setEditable(false);

        islemiTamamla.setText("İŞLEMİ TAMAMLA");
        islemiTamamla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                islemiTamamlaActionPerformed(evt);
            }
        });

        anamenu.setText("Ana Menüye Dön");
        anamenu.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                anamenuActionPerformed(evt);
            }
        });

        kapat.setText("Programı Kapat");
        kapat.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                kapatActionPerformed(evt);
            }
        });

        jLabel5.setText("Toplam :");

        toplam.setEditable(false);

        jLabel6.setText("Fiyat :");

        fiyat.setEditable(false);

        goster.setText("Salonu Göster");
        goster.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                gosterActionPerformed(evt);
            }
        });

        yukleniyor.setIcon(new javax.swing.ImageIcon(getClass().getResource("/drawable/yukleniyor.gif"))); // NOI18N
        yukleniyor.setText("jLabel7");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(goster, javax.swing.GroupLayout.PREFERRED_SIZE, 201, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(45, 45, 45)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(seansCB, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(filmCB, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addComponent(anamenu, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(kapat, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(islemiTamamla, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(toplam, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(jPanel1Layout.createSequentialGroup()
                                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(18, 18, 18)
                                    .addComponent(biletSayisi, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGap(2, 2, 2)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 71, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(SalonNo, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(fiyat, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(yukleniyor, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(29, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(filmCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(seansCB, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(goster)
                .addGap(78, 78, 78)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(biletSayisi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(SalonNo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(8, 8, 8)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(fiyat, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(toplam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(islemiTamamla)
                .addGap(44, 44, 44)
                .addComponent(yukleniyor, javax.swing.GroupLayout.PREFERRED_SIZE, 67, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 88, Short.MAX_VALUE)
                .addComponent(anamenu)
                .addGap(18, 18, 18)
                .addComponent(kapat)
                .addContainerGap())
        );

        jPanel4.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        perde.setFont(new java.awt.Font("Vijaya", 2, 36)); // NOI18N
        perde.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        perde.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(perde, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 467, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(perde, javax.swing.GroupLayout.DEFAULT_SIZE, 59, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(koltuklar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(koltuklar, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    
    private void anamenuActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_anamenuActionPerformed
        this.setVisible(false);
        this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_anamenuActionPerformed
    
    private void kapatActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_kapatActionPerformed
        System.exit(0);
        // TODO add your handling code here:
    }//GEN-LAST:event_kapatActionPerformed
    
    private void filmCBİtemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_filmCBİtemStateChanged
        
        seanslar.clear();
        seansCB.removeAllItems();
        String currentFilm = (String) filmCB.getSelectedItem();
        seansCB.setSelectedItem(null);
        perde.setText(currentFilm);
        try {
            preparedStatement = main.conn
                    .prepareStatement("SELECT * FROM film WHERE isim = '"+ currentFilm + "'");
            resultSet = preparedStatement.executeQuery();
            while(resultSet.next())
            {
                sn = resultSet.getInt(4);
                filmFiyati = resultSet.getFloat(3);
                fiyat.setText(filmFiyati+"");
                SalonNo.setText(sn+"");
                for(int i = 5;i<=14;i++){
                    String z = resultSet.getString(i);
                    seanslar.add(z);
                    if(resultSet.wasNull()){}else{
                        preparedStatement1 = main.conn
                                .prepareStatement("SELECT * FROM seans WHERE seans_no ="+ z);
                        resultSet1 = preparedStatement1.executeQuery();
                        while(resultSet1.next())
                        {
                            seansCB.addItem(resultSet1.getString(1));
                            
                        }
                    }}
                
            }
            
            
        } catch (SQLException ex) {
            Logger.getLogger(Satis.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }//GEN-LAST:event_filmCBİtemStateChanged
    
    
    private void gosterActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_gosterActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        yukleniyor.setVisible(true);
        task = new Task();
        task.execute();        
    }//GEN-LAST:event_gosterActionPerformed
    
    private void islemiTamamlaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_islemiTamamlaActionPerformed
        setCursor(Cursor.getPredefinedCursor(Cursor.WAIT_CURSOR));
        yukleniyor.setVisible(true);
        task1 = new Task1();
        task1.execute();
        
        
        
    }//GEN-LAST:event_islemiTamamlaActionPerformed
    class Task1 extends SwingWorker<Void, Void> {
        
        @Override
        protected Void doInBackground() throws Exception {
            String s ="UPDATE koltuk SET db = 1 WHERE seans_no = "
                    + curSeansNo + " AND sno = "+ SalonNo.getText() +" AND kid = " + "1"+ ";";
            System.err.println(s);
            try {
                for(int h = 0; h<seciliKoltuklar.size();h++){
                    
                    preparedStatement3 = main.conn.prepareStatement("UPDATE koltuk SET db = 1 WHERE seans_no = "
                            + curSeansNo + " AND sno = "+ SalonNo.getText() +" AND kid = '" + seciliKoltuklar.get(h)+ "' ;");
                    preparedStatement3.execute();
                    
                    bs = 0;
                    biletSayisi.setText("");
                    toplam.setText("");
                    doluKoltuklar.clear();
                    koltuklar.removeAll();
                    koltuklar.setLayout(null);
                    
                    
                    
                    
                    preparedStatement2 = main.conn
                            .prepareStatement("SELECT dikeyk,yatayk FROM salon WHERE no = '"+ sn + "'");
                    resultSet2 = preparedStatement2.executeQuery();
                    while(resultSet2.next())
                    {
                        koltukColomns= resultSet2.getInt(1);
                        koltukRows= resultSet2.getInt(2);
                        
                        
                        
                    }
                    
                    System.out.println("|" + seansCB.getSelectedItem()+"|");
                    if(seansCB.getSelectedItem().equals(" ")){}else{
                        System.out.println("colomns = " + koltukColomns);
                        System.out.println("rows = " + koltukRows);
                        koltuklar.removeAll();
                        koltuklar.setLayout(null);
                        grid = new java.awt.GridLayout(koltukColomns, koltukRows);
                        koltuklar.setLayout(grid);
                        
                        preparedStatement4 = main.conn
                                .prepareStatement("SELECT seans_no FROM seans WHERE saat = '"+seansCB.getSelectedItem() + "'");
                        resultSet4 = preparedStatement4.executeQuery();
                        while(resultSet4.next())
                        {
                            curSeansNo= resultSet4.getInt(1);
                        }
                        preparedStatement5 = main.conn
                                .prepareStatement("SELECT kid FROM koltuk WHERE db = 1 AND sno = '"+ sn + "' AND seans_no = " +
                                        curSeansNo);
                        resultSet5 = preparedStatement5.executeQuery();
                        while(resultSet5.next())
                        {
                            doluKoltuklar.add(resultSet5.getString(1));
                        }
                        
                        
                        /* preparedStatement3 = main.conn
                        .prepareStatement("SELECT * FROM koltuk WHERE sno = '"+SalonNo.getText()+
                        " AND "+ curSeansNo + "'");
                        resultSet3 = preparedStatement3.executeQuery();
                        while(resultSet3.next())
                        {}*/
                        
                        for (int i =0;i< koltukColomns;i++ ){
                            
                            for (int j = 1; j<=koltukRows;j++){
                                JButton a = new JButton(alfabe[i]+j);
                                if (doluKoltuklar.contains(a.getText())){
                                    a.setBackground(Color.red);
                                    a.setEnabled(false);
                                }
                                else{
                                    a.setBackground(Color.lightGray);
                                }
                                a.addActionListener(new java.awt.event.ActionListener() {
                                    @Override
                                    public void actionPerformed(java.awt.event.ActionEvent evt) {
                                        if(a.getBackground().equals(Color.lightGray)){
                                            a.setBackground(Color.GREEN);
                                            seciliKoltuklar.add(a.getText());
                                            bs++;
                                        }
                                        else{
                                            a.setBackground(Color.lightGray);
                                            seciliKoltuklar.remove(a.getText());
                                            bs--;
                                        }
                                        biletSayisi.setText(bs+"");
                                        toplam.setText((bs*filmFiyati)+" TRY");
                                    }
                                });
                                
                                koltuklar.add(a);
                                
                                
                            }}
                        
                        int d = seansCB.getSelectedIndex();
                        int e = filmCB.getSelectedIndex();
                        filmCB.setSelectedItem(null);
                        filmCB.setSelectedIndex(e);
                        seansCB.setSelectedIndex(d);
                        
                        
                        
                    }
                    
                }
            }
            catch (SQLException ex) {
                Logger.getLogger(Satis.class.getName()).log(Level.SEVERE, null, ex);
                showMessageDialog(null, "Satış İşlemi TAMAMLANAMADI!");
            }
            seciliKoltuklar.clear();
            
            return null;
        }
        @Override
        public void done() {
            yukleniyor.setVisible(false);
            setCursor(null);
        }
    }
    
    
    
    
    
    class Task extends SwingWorker<Void, Void> {
        
        @Override
        protected Void doInBackground() throws Exception {
            
            bs = 0;
            biletSayisi.setText("");
            toplam.setText("");
            doluKoltuklar.clear();
            koltuklar.removeAll();
            koltuklar.setLayout(null);
            
            try {
                
                
                preparedStatement2 = main.conn
                        .prepareStatement("SELECT dikeyk,yatayk FROM salon WHERE no = '"+ sn + "'");
                resultSet2 = preparedStatement2.executeQuery();
                while(resultSet2.next())
                {
                    koltukColomns= resultSet2.getInt(1);
                    koltukRows= resultSet2.getInt(2);
                    
                    
                    
                }
                
                System.out.println("|" + seansCB.getSelectedItem()+"|");
                if(seansCB.getSelectedItem().equals(" ")){}else{
                    System.out.println("colomns = " + koltukColomns);
                    System.out.println("rows = " + koltukRows);
                    koltuklar.removeAll();
                    koltuklar.setLayout(null);
                    grid = new java.awt.GridLayout(koltukColomns, koltukRows);
                    koltuklar.setLayout(grid);
                    
                    preparedStatement4 = main.conn
                            .prepareStatement("SELECT seans_no FROM seans WHERE saat = '"+seansCB.getSelectedItem() + "'");
                    resultSet4 = preparedStatement4.executeQuery();
                    while(resultSet4.next())
                    {
                        curSeansNo= resultSet4.getInt(1);
                    }
                    preparedStatement5 = main.conn
                            .prepareStatement("SELECT kid FROM koltuk WHERE db = 1 AND sno = '"+ sn + "' AND seans_no = " +
                                    curSeansNo);
                    resultSet5 = preparedStatement5.executeQuery();
                    while(resultSet5.next())
                    {
                        doluKoltuklar.add(resultSet5.getString(1));
                    }
                    
                    
                    /* preparedStatement3 = main.conn
                    .prepareStatement("SELECT * FROM koltuk WHERE sno = '"+SalonNo.getText()+
                    " AND "+ curSeansNo + "'");
                    resultSet3 = preparedStatement3.executeQuery();
                    while(resultSet3.next())
                    {}*/
                    
                    for (int i =0;i< koltukColomns;i++ ){
                        
                        for (int j = 1; j<=koltukRows;j++){
                            JButton a = new JButton(alfabe[i]+j);
                            if (doluKoltuklar.contains(a.getText())){
                                a.setBackground(Color.red);
                                a.setEnabled(false);
                            }
                            else{
                                a.setBackground(Color.lightGray);
                            }
                            a.addActionListener(new java.awt.event.ActionListener() {
                                @Override
                                public void actionPerformed(java.awt.event.ActionEvent evt) {
                                    if(a.getBackground().equals(Color.lightGray)){
                                        a.setBackground(Color.GREEN);
                                        seciliKoltuklar.add(a.getText());
                                        bs++;
                                    }
                                    else{
                                        a.setBackground(Color.lightGray);
                                        seciliKoltuklar.remove(a.getText());
                                        bs--;
                                    }
                                    biletSayisi.setText(bs+"");
                                    toplam.setText((bs*filmFiyati)+" TRY");
                                }
                            });
                            
                            koltuklar.add(a);
                            
                            
                        }}
                    
                    int d = seansCB.getSelectedIndex();
                    int e = filmCB.getSelectedIndex();
                    filmCB.setSelectedItem(null);
                    filmCB.setSelectedIndex(e);
                    seansCB.setSelectedIndex(d);
                    
                    
                    
                }
            } catch (SQLException ex) {
                Logger.getLogger(Satis.class.getName()).log(Level.SEVERE, null, ex);
                showMessageDialog(null, "Veri Tabanına Bağlantıda Bir Sorun Oluştu !");
            }
            
            return null;
        }
        
        @Override
        public void done() {
            yukleniyor.setVisible(false);
            setCursor(null);
        }
        /**
         * Main task. Executed in background thread.
         */
    }
    
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
        */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Satis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Satis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Satis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Satis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Satis().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField SalonNo;
    private javax.swing.JButton anamenu;
    private javax.swing.JTextField biletSayisi;
    private javax.swing.JComboBox filmCB;
    private javax.swing.JTextField fiyat;
    private javax.swing.JButton goster;
    private javax.swing.JButton islemiTamamla;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JButton kapat;
    private javax.swing.JPanel koltuklar;
    private javax.swing.JLabel perde;
    private javax.swing.JComboBox seansCB;
    private javax.swing.JTextField toplam;
    private javax.swing.JLabel yukleniyor;
    // End of variables declaration//GEN-END:variables
}
