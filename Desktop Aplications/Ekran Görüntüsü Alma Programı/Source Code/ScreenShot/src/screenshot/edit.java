/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
package screenshot;

import java.awt.AWTException;
import java.awt.BasicStroke;
import java.awt.Color;
import java.awt.Cursor;
import java.awt.Graphics;
import java.awt.Graphics2D;
import java.awt.Image;
import java.awt.MouseInfo;
import java.awt.Point;
import java.awt.Rectangle;
import java.awt.Robot;
import java.awt.Toolkit;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.SwingUtilities;
import javax.swing.filechooser.FileNameExtensionFilter;

/**
 *
 * @author AS
 */
public class edit extends javax.swing.JFrame {
    Robot robot;
    ImageIcon resulticon;
    Rectangle Fullscreen = new Rectangle(Toolkit.getDefaultToolkit().getScreenSize());
    int x1,y1,x2,y2;
    BufferedImage resultimg;
    File file;
    Runtime r=Runtime.getRuntime();
    Rectangle2D   dragRectangle;
    
    /**
     * Creates new form edit
     */
    public edit() {
        this.setTitle("Hamdi Burak Dilek");
        initComponents();
       
        jPanel1.setSize(Fullscreen.height,Fullscreen.width);
        this.setBounds(Fullscreen);
        
        this.setVisible(true);
        
        
    }
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setOpacity(0.3F);
        getContentPane().setLayout(new java.awt.CardLayout());

        jPanel1.addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                jPanel1MouseDragged(evt);
            }
            public void mouseMoved(java.awt.event.MouseEvent evt) {
                jPanel1MouseMoved(evt);
            }
        });
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                jPanel1MousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jPanel1MouseReleased(evt);
            }
        });
        jPanel1.setLayout(new java.awt.CardLayout());
        getContentPane().add(jPanel1, "card3");

        pack();
    }// </editor-fold>//GEN-END:initComponents
public static void kopyala(Image image)
    {
        if (image == null)
            throw new IllegalArgumentException ("Kaopyalancak Resim Yok");

        ImageTransferable transferable = new ImageTransferable( image );
        Toolkit.getDefaultToolkit().getSystemClipboard().setContents(transferable, null);
    }
   
    @Override
    public void paint(Graphics g)
    {
        // it's always a good idea to call the super method
        // unless you're completely changing the standard behavior
        super.paint(g);
       
 
        Graphics2D g2d = (Graphics2D) g;
        if (dragRectangle != null) {
            float[] dash = new float[]{4.0f, 4.0f};
            BasicStroke solidStroke = new BasicStroke(1.0f);
            BasicStroke dashStroke = new BasicStroke(1.0f,
                    BasicStroke.CAP_BUTT,
                    BasicStroke.JOIN_BEVEL,
                    0.0f,
                    dash, 0);
            g2d.setStroke(solidStroke);
            g2d.setColor(Color.red);
            g2d.draw(dragRectangle);
            g2d.setStroke(dashStroke);
            g2d.setColor(Color.black);
            g2d.draw(dragRectangle);
        }
 
 
    }
    private void jPanel1MousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MousePressed
         if(SwingUtilities.isLeftMouseButton(evt)){
        Point mouselocation1 = MouseInfo.getPointerInfo().getLocation();
        x1 = (int) mouselocation1.getX();
        y1 = (int) mouselocation1.getY();
        System.out.println("pressed");
         }
// TODO add your handling code here:
    }//GEN-LAST:event_jPanel1MousePressed

    private void jPanel1MouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseReleased
        if(SwingUtilities.isLeftMouseButton(evt)){
            
        
        Point mouselocation2;
        mouselocation2 = MouseInfo.getPointerInfo().getLocation();
        x2 = (int) mouselocation2.getX();
        y2 = (int) mouselocation2.getY();
        if (dragRectangle != null) {
                    repaintWithPadding(dragRectangle);
                    dragRectangle = null;
                
        try {

            if(x1<x2 & y1<y2){
                resultimg = cutScreenshot(x1,y1,x2-x1,y2-y1);
            }
            else if(x1<x2 & y1>y2){
                resultimg = cutScreenshot(x1,y2,x2-x1,y1-y2);
            }
            else if(x1>x2 & y1<y2){
                resultimg = cutScreenshot(x2,y1,x1-x2,y2-y1);
            }
            else if(x1>x2 & y1>y2){
                resultimg = cutScreenshot(x2,y2,x1-x2,y1-y2);
            }
            else{
                //do nothing
            }

        } catch (AWTException | IOException ex) {
            Logger.getLogger(edit.class.getName()).log(Level.SEVERE, null, ex);
        }
        System.out.println("released");

        this.setVisible(false);
        
        //Sonraki Frame
        JFrame rf = new ResultFrame();
        rf.setTitle("Hamdi Burak Dilek");
        resulticon = new ImageIcon(resultimg);
        JLabel rlabel = new javax.swing.JLabel();
        rlabel.setIcon(resulticon);
        rf.add(rlabel);
        javax.swing.JMenuBar jMenuBar2;
        jMenuBar2 = new javax.swing.JMenuBar();
        rf.setSize(resultimg.getWidth()+5,resultimg.getHeight()+55);
        rf.setVisible(true);
        javax.swing.JMenuItem iptal;
        javax.swing.JMenu jMenu1;
        javax.swing.JMenu jMenu2;
        javax.swing.JMenuItem kapat;
        javax.swing.JMenuItem kaydet;
        javax.swing.JMenuItem kopyala;
        javax.swing.JMenuItem paint;
        jMenu1 = new javax.swing.JMenu();
        jMenu2 = new javax.swing.JMenu();
        kaydet = new javax.swing.JMenuItem();
        iptal = new javax.swing.JMenuItem();
        kapat = new javax.swing.JMenuItem();
        kopyala = new javax.swing.JMenuItem();
        paint = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new java.awt.CardLayout());

        jMenu1.setText("Menu");
        jMenu2.setText("Düzen");

        kaydet.setText("Farklı Kaydet");
        kopyala.setText("Panoya Kopyala");
        paint.setText("Paint'te Düzenle");
        kopyala.addActionListener((java.awt.event.ActionEvent evt1) -> {
            kopyala(resultimg);
                    });
        paint.addActionListener((java.awt.event.ActionEvent evt1) -> {
            try {
                File temp = File.createTempFile("img",".png");
                temp.deleteOnExit();
                ImageIO.write(resultimg, "png", temp);
                r.exec("mspaint.exe "+temp);
            } catch (IOException ex) {
                Logger.getLogger(edit.class.getName()).log(Level.SEVERE, null, ex);
            }   });
        jMenu2.add(paint);
        kaydet.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                JFileChooser fileChooser = new JFileChooser();
                fileChooser.setDialogTitle("Kaydet");
                fileChooser.setAcceptAllFileFilterUsed(false);
                fileChooser.setMultiSelectionEnabled(false);
                fileChooser.setFileFilter(new FileNameExtensionFilter(".jpg","jpg"));
                fileChooser.setFileFilter(new FileNameExtensionFilter(".png","png"));
                fileChooser.setFileFilter(new FileNameExtensionFilter(".gif","gif"));
                fileChooser.setFileFilter(new FileNameExtensionFilter(".jpeg","jpeg"));
           

                int userSelection = fileChooser.showSaveDialog(rf);

                if (userSelection == JFileChooser.APPROVE_OPTION) {
                   
                    try {
                         if (fileChooser.getSelectedFile().getCanonicalPath().endsWith(".jpg") || fileChooser.getSelectedFile().getCanonicalPath().endsWith(".png")
                                 || fileChooser.getSelectedFile().getCanonicalPath().endsWith(".gif") || fileChooser.getSelectedFile().getCanonicalPath().endsWith(".jpeg")){
                         file = new File(fileChooser.getSelectedFile().getCanonicalPath());
                         }
                         else{
                        file = new File(fileChooser.getSelectedFile().getCanonicalPath() + "." + ((FileNameExtensionFilter) fileChooser.getFileFilter()).getExtensions()[0]);
                         }
                    } catch (IOException ex) {
                        Logger.getLogger(edit.class.getName()).log(Level.SEVERE, null, ex);
                    }
                    System.out.println("Kaydedildiği yer: " + file.getAbsolutePath());
                    try {
                        ImageIO.write(resultimg,((FileNameExtensionFilter) fileChooser.getFileFilter()).getExtensions()[0], file);
                    } catch (IOException ex) {
                        Logger.getLogger(edit.class.getName()).log(Level.SEVERE, null, ex);
                    }
                }

            }
        });
        jMenu1.add(kaydet);

        iptal.setText("İptal");
        iptal.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {

                JFrame main = new main();
                main.setVisible(true);
                rf.setVisible(false); //you can't see me!
                rf.dispose();
                //Destroy the JFrame object
            }
        });
        jMenu1.add(iptal);

        kapat.setText("Çıkış");
        kapat.addActionListener(new java.awt.event.ActionListener() {
            @Override
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                System.exit(0);
            }
        });
        jMenu1.add(kapat);
        jMenu2.add(kopyala);

        jMenuBar2.add(jMenu1);
        jMenuBar2.add(jMenu2);

        rf.setJMenuBar(jMenuBar2);
        }
        }
// TODO add your handling code here:
    }//GEN-LAST:event_jPanel1MouseReleased

    private void jPanel1MouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseDragged
      if(SwingUtilities.isLeftMouseButton(evt)){
                if (dragRectangle != null) {
                    repaintWithPadding(dragRectangle);
                    dragRectangle = null;
                }
                // a lazy way of doing this
                Rectangle a = new Rectangle(evt.getX(), evt.getY(), 1, 1);
                Rectangle b = new Rectangle(
                        (int) x1,
                        (int) y1,
                        1, 1);
                Rectangle c = a.union(b);
                dragRectangle = c;
                repaintWithPadding(dragRectangle);
      } 
        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1MouseDragged

    private void jPanel1MouseMoved(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseMoved
       
        this.setCursor(new Cursor(Cursor.CROSSHAIR_CURSOR));        // TODO add your handling code here:
    }//GEN-LAST:event_jPanel1MouseMoved
                                
    void repaintWithPadding(Rectangle2D r2d)
    {
        Rectangle r = new Rectangle(
                (int) r2d.getX() - 4,
                (int) r2d.getY() - 4,
                (int) r2d.getWidth() + 8,
                (int) r2d.getHeight() + 8);
        repaint();
    }
      public BufferedImage cutScreenshot(int x, int y, int width, int height) throws AWTException, IOException{
        Rectangle rec = new Rectangle(x, y, width, height);
        this.setVisible(false);
        BufferedImage image = new Robot().createScreenCapture(rec);
        this.setVisible(true);
        return image;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
        */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(edit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(edit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(edit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(edit.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new edit().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables
}
