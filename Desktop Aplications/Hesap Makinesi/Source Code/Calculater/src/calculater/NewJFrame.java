/*
* To change this license header, choose License Headers in Project Properties.
* To change this template file, choose Tools | Templates
* and open the template in the editor.
*/
package calculater;

import java.awt.event.KeyEvent;
import java.math.BigDecimal;
import java.math.MathContext;
import javax.swing.JFrame;
import static jdk.nashorn.internal.objects.NativeString.substring;

/**
 *
 * @author AS
 */
public class NewJFrame extends javax.swing.JFrame {
    public String[] numbers = new String[20];
    public String[] operations = new String[19];
    public boolean isValue = false;
    public BigDecimal result;
    public int op;
    boolean isEq = false;
    boolean isNumber = true;
    boolean dotUsed = false;
    
    /**
     * Creates new form NewJFrame
     */
    public NewJFrame() {
        initComponents();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jPanel1 = new javax.swing.JPanel();
        clean = new javax.swing.JButton();
        divide = new javax.swing.JButton();
        mult = new javax.swing.JButton();
        seven = new javax.swing.JButton();
        four = new javax.swing.JButton();
        one = new javax.swing.JButton();
        zero = new javax.swing.JButton();
        nine = new javax.swing.JButton();
        eight = new javax.swing.JButton();
        five = new javax.swing.JButton();
        six = new javax.swing.JButton();
        three = new javax.swing.JButton();
        two = new javax.swing.JButton();
        point = new javax.swing.JButton();
        oposite = new javax.swing.JButton();
        del = new javax.swing.JButton();
        sub = new javax.swing.JButton();
        add = new javax.swing.JButton();
        inverse = new javax.swing.JButton();
        equel = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        resultText = new javax.swing.JEditorPane();
        multiresultText = new javax.swing.JTextField();

        jScrollPane1.setViewportView(jEditorPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        clean.setText("C");
        clean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cleanActionPerformed(evt);
            }
        });
        clean.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                cleanKeyPressed(evt);
            }
        });

        divide.setText("/");
        divide.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                divideActionPerformed(evt);
            }
        });
        divide.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                divideKeyPressed(evt);
            }
        });

        mult.setText("X");
        mult.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multActionPerformed(evt);
            }
        });
        mult.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                multKeyPressed(evt);
            }
        });

        seven.setText("7");
        seven.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sevenActionPerformed(evt);
            }
        });
        seven.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sevenKeyPressed(evt);
            }
        });

        four.setText("4");
        four.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fourActionPerformed(evt);
            }
        });
        four.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fourKeyPressed(evt);
            }
        });

        one.setText("1");
        one.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                oneActionPerformed(evt);
            }
        });
        one.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                oneKeyPressed(evt);
            }
        });

        zero.setText("0");
        zero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                zeroActionPerformed(evt);
            }
        });
        zero.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                zeroKeyPressed(evt);
            }
        });

        nine.setText("9");
        nine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nineActionPerformed(evt);
            }
        });
        nine.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                nineKeyPressed(evt);
            }
        });

        eight.setText("8");
        eight.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eightActionPerformed(evt);
            }
        });
        eight.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                eightKeyPressed(evt);
            }
        });

        five.setText("5");
        five.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                fiveActionPerformed(evt);
            }
        });
        five.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                fiveKeyPressed(evt);
            }
        });

        six.setText("6");
        six.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sixActionPerformed(evt);
            }
        });
        six.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                sixKeyPressed(evt);
            }
        });

        three.setText("3");
        three.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                threeActionPerformed(evt);
            }
        });
        three.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                threeKeyPressed(evt);
            }
        });

        two.setText("2");
        two.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                twoActionPerformed(evt);
            }
        });
        two.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                twoKeyPressed(evt);
            }
        });

        point.setText(".");
        point.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                pointActionPerformed(evt);
            }
        });
        point.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                pointKeyPressed(evt);
            }
        });

        oposite.setText("00");
        oposite.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                opositeActionPerformed(evt);
            }
        });
        oposite.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                opositeKeyPressed(evt);
            }
        });

        del.setText("Del");
        del.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                delActionPerformed(evt);
            }
        });
        del.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                delKeyPressed(evt);
            }
        });

        sub.setText("-");
        sub.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                subActionPerformed(evt);
            }
        });
        sub.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                subKeyPressed(evt);
            }
        });

        add.setText("+");
        add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                addActionPerformed(evt);
            }
        });
        add.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                addKeyPressed(evt);
            }
        });

        inverse.setText("1/x");
        inverse.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                inverseActionPerformed(evt);
            }
        });
        inverse.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                inverseKeyPressed(evt);
            }
        });

        equel.setText("=");
        equel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                equelActionPerformed(evt);
            }
        });
        equel.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                equelKeyPressed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Sitka Banner", 0, 11)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 102, 102));
        jLabel1.setText("Hamdi Burak Dilek");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(clean, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(divide, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(mult, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(seven, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(eight, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(nine, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(four, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(five, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(six, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(one, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(two, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(three, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(zero, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(oposite, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(point, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(del, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(sub, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(inverse, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(equel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(clean, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(divide, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(mult, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(seven, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(eight, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(nine, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(four, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(five, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(six, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(one, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(two, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(three, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(zero, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(point, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(oposite, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(del, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(sub, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(add, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(inverse, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(equel, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel1))
        );

        resultText.setEditable(false);
        resultText.setAlignmentX(-0.5F);
        resultText.setAutoscrolls(false);
        resultText.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                resultTextKeyPressed(evt);
            }
        });
        jScrollPane2.setViewportView(resultText);

        multiresultText.setEnabled(false);
        multiresultText.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                multiresultTextActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(multiresultText, javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 230, Short.MAX_VALUE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(multiresultText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 57, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 232, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void div(){
        if(isEq == true){
            op = 3;
            isEq = false;
            multiresultText.setText(multiresultText.getText() + " / ");
        }
        if (resultText.getText().length() == 0){
            if(isNumber == false){
                String a = multiresultText.getText().substring(0, multiresultText.getText().length()-3);
                System.out.println(a);
                multiresultText.setText(a + " / ");
            }
        }
        else{
            if(isValue == false){
                str_val1 = multiresultText.getText();
                str_val1 = delete(str_val1);
                val1 = new BigDecimal(resultText.getText());
                multiresultText.setText(resultText.getText() + " / ");
                isValue = true;
            }
            else{
                str_val2 = multiresultText.getText();
                str_val2 = delete(str_val1);
                val2 = new BigDecimal(resultText.getText());
                result = calculate(val1,val2,op);
                val1 = result;
                multiresultText.setText(result + " / ");
            }       // TODO add your handling code here:
        }
        op = 3;
        resultText.setText("");
        dotUsed = false;
        isNumber = false;
    }
    private void divideActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_divideActionPerformed
        div();
// TODO add your handling code here:
    }//GEN-LAST:event_divideActionPerformed
    public void addmethod(){
        if(isEq == true){
            op = 0;
            isEq = false;
            multiresultText.setText(multiresultText.getText() + " + ");
        }
        if (resultText.getText().length() == 0){
            if(isNumber == false){
                String a = multiresultText.getText().substring(0, multiresultText.getText().length()-3);
                System.out.println(a);
                multiresultText.setText(a + " + ");
            }
        }
        else{
            if(isValue == false){
                str_val1 = multiresultText.getText();
                str_val1 = delete(str_val1);
                val1 = new BigDecimal(resultText.getText());
                multiresultText.setText(resultText.getText() + " + ");
                isValue = true;
            }
            else{
                str_val2 = multiresultText.getText();
                str_val2 = delete(str_val1);
                val2 = new BigDecimal(resultText.getText());
                result = calculate(val1,val2,op);
                val1 = result;
                multiresultText.setText(result + " + ");}op = 0;
                resultText.setText("");
                dotUsed = false;
                isNumber = false;
        }
    }
    private void addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_addActionPerformed
        addmethod();
        // TODO add your handling code here:
    }//GEN-LAST:event_addActionPerformed
    
    private void cleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cleanActionPerformed
        
        resultText.setText("");
        multiresultText.setText("");// TODO add your handling code here:
        isNumber = false;
        dotUsed = false;
        isValue = false ;
    }//GEN-LAST:event_cleanActionPerformed
    
    private void zeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_zeroActionPerformed
        // TODO add your handling code here:
        resultText.setText(resultText.getText()+"0");
        isNumber = true;
    }//GEN-LAST:event_zeroActionPerformed
    public String delete(String str) {
        if (str.length() > 0 && str.charAt(str.length()-1)=='x') {
            str = str.substring(0, str.length()-1);
        }
        return str;
        
    }
    private void oneActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_oneActionPerformed
        resultText.setText(resultText.getText()+"1");
        isNumber = true;// TODO add your handling code here:
    }//GEN-LAST:event_oneActionPerformed
    
    private void twoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_twoActionPerformed
        isNumber = true;
        resultText.setText(resultText.getText()+"2");        // TODO add your handling code here:
    }//GEN-LAST:event_twoActionPerformed
    
    private void threeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_threeActionPerformed
        isNumber = true;
        resultText.setText(resultText.getText()+"3");        // TODO add your handling code here:
    }//GEN-LAST:event_threeActionPerformed
    
    private void fourActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fourActionPerformed
        isNumber = true;
        resultText.setText(resultText.getText()+"4");        // TODO add your handling code here:
    }//GEN-LAST:event_fourActionPerformed
    
    private void fiveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_fiveActionPerformed
        isNumber = true;
        resultText.setText(resultText.getText()+"5");        // TODO add your handling code here:
    }//GEN-LAST:event_fiveActionPerformed
    
    private void sixActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sixActionPerformed
        isNumber = true;
        resultText.setText(resultText.getText()+"6");        // TODO add your handling code here:
    }//GEN-LAST:event_sixActionPerformed
    
    private void sevenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sevenActionPerformed
        isNumber = true;
        resultText.setText(resultText.getText()+"7");        // TODO add your handling code here:
    }//GEN-LAST:event_sevenActionPerformed
    
    private void eightActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eightActionPerformed
        isNumber = true;
        resultText.setText(resultText.getText()+"8");        // TODO add your handling code here:
    }//GEN-LAST:event_eightActionPerformed
    
    private void nineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nineActionPerformed
        isNumber = true;
        resultText.setText(resultText.getText()+"9");        // TODO add your handling code here:
    }//GEN-LAST:event_nineActionPerformed
    String str_val1;
    BigDecimal val1;
    String str_val2;
    BigDecimal val2;
    public void multmethod(){
        if(isEq == true){
            op = 2;
            isEq = false;
            multiresultText.setText(multiresultText.getText() + " X ");
        }
        if (resultText.getText().length() == 0){
            if(isNumber == false){
                String a = multiresultText.getText().substring(0, multiresultText.getText().length()-3);
                
                multiresultText.setText(a + " X ");
            }
        }
        else{
            if(isValue == false){
                str_val1 = multiresultText.getText();
                str_val1 = delete(str_val1);
                val1 = new BigDecimal(resultText.getText());
                multiresultText.setText(resultText.getText() + " X ");
                isValue = true;
            }
            else{
                str_val2 = multiresultText.getText();
                str_val2 = delete(str_val1);
                val2 = new BigDecimal(resultText.getText());
                result = calculate(val1,val2,op);
                val1 = result;
                multiresultText.setText(result + " X ");
            }       // TODO add your handling code here:
        }
        op = 2;
        resultText.setText("");
        isNumber = false;
        dotUsed = false;
    }
    private void multActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multActionPerformed
        multmethod();
        // TODO add your handling code here:
    }//GEN-LAST:event_multActionPerformed
    private void subMethod(){
        if(isEq == true){
            op = 1;
            isEq = false;
            multiresultText.setText(multiresultText.getText() + " - ");
        }
        if (resultText.getText().length() == 0){
            
            if(isNumber == false){
                String a = multiresultText.getText().substring(0, multiresultText.getText().length()-3);
                multiresultText.setText(a + " - ");
            }
            
        }
        else{
            if(isValue == false){
                str_val1 = multiresultText.getText();
                str_val1 = delete(str_val1);
                val1 = new BigDecimal(resultText.getText());
                multiresultText.setText(resultText.getText() + " - ");
                isValue = true;
            }
            else{
                str_val2 = multiresultText.getText();
                str_val2 = delete(str_val1);
                val2 = new BigDecimal(resultText.getText());
                result = calculate(val1,val2,op);
                val1 = result;
                multiresultText.setText(result + " - ");
            }       // TODO add your handling code here:
        }
        op = 1;
        resultText.setText("");
        isNumber = false;
        dotUsed = false;
    }
    private void subActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_subActionPerformed
        subMethod();
        // TODO add your handling code here:
    }//GEN-LAST:event_subActionPerformed
    
    private void inverseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_inverseActionPerformed
        BigDecimal one = new BigDecimal("1");
        BigDecimal a = null;
        
        /*if (op != 4){
        int b = multiresultText.getText().length();
        if (b != 0){
        multiresultText.setText(multiresultText.getText().substring(0, multiresultText.getText().length()-1));
        }
        
        }*/
        if (resultText.getText().length() == 0 & multiresultText.getText().length() == 0){
            
        }
        else{
            if(resultText.getText().length() == 0){
                
                if(isNumber==false){
                    a = new BigDecimal(multiresultText.getText().substring(0, multiresultText.getText().length()-3));
                    
                }
                else{
                    a = new BigDecimal(multiresultText.getText());
                }
            }
            else
                a = new BigDecimal(resultText.getText());
            
            try{
                multiresultText.setText(one.divide(a)+"");
            }
            catch(ArithmeticException e){
                multiresultText.setText(one.divide(a,MathContext.DECIMAL64)+"");
                
            }
            op = 4;
            resultText.setText("");
            isNumber = true;
            // TODO add your handling code here:
    }//GEN-LAST:event_inverseActionPerformed
    }
    public void equal(){
        if (resultText.getText().length() == 0){
            result = calculate(val1,val2,op);
            val1 = result;
            multiresultText.setText(result+"");
        }
        else{
            str_val2 = multiresultText.getText();
            str_val2 = delete(str_val1);
            val2 = new BigDecimal(resultText.getText());
            result = calculate(val1,val2,op);
            val1 = result;
            multiresultText.setText(result + "");
            resultText.setText("");
        }
        isEq = true;
        isNumber = true;
    }
    private void equelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_equelActionPerformed
        
        equal();
        
        // TODO add your handling code here:
    }//GEN-LAST:event_equelActionPerformed
    
    private void pointActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_pointActionPerformed
        if(dotUsed==false){
            if (resultText.getText().length() == 0){
                resultText.setText("0.");
            }
            else{
                
                
                if(isNumber == false){
                    String a =resultText.getText().substring(0, resultText.getText().length()-1);
                    resultText.setText(a + ".");
                }
                else{
                    resultText.setText(resultText.getText()+".");
                }
            }
            isNumber = false;
            dotUsed = true;
        }
// TODO add your handling code here:
    }//GEN-LAST:event_pointActionPerformed
    
    private void multiresultTextActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_multiresultTextActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_multiresultTextActionPerformed
    
    private void delActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_delActionPerformed
        int a = resultText.getText().length();
        if (a != 0){
            resultText.setText(resultText.getText().substring(0, resultText.getText().length()-1));
        }
        isNumber = true;
        a = resultText.getText().length();
        if (a == 0){
            dotUsed = false;
            isValue = false ;
            
        }
        
    }//GEN-LAST:event_delActionPerformed
    
    private void opositeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_opositeActionPerformed
        resultText.setText(resultText.getText()+"00");
        isNumber = true;
// TODO add your handling code here:
    }//GEN-LAST:event_opositeActionPerformed
    
    private void resultTextKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_resultTextKeyPressed
        // TODO add your handling code here:
        keypress(evt);
    }//GEN-LAST:event_resultTextKeyPressed
    
    private void cleanKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_cleanKeyPressed
        keypress(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_cleanKeyPressed
    
    private void divideKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_divideKeyPressed
        keypress(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_divideKeyPressed
    
    private void multKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_multKeyPressed
        keypress(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_multKeyPressed
    
    private void delKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_delKeyPressed
        keypress(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_delKeyPressed
    
    private void sevenKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sevenKeyPressed
        keypress(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_sevenKeyPressed
    
    private void eightKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_eightKeyPressed
        keypress(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_eightKeyPressed
    
    private void nineKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_nineKeyPressed
        keypress(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_nineKeyPressed
    
    private void subKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_subKeyPressed
        keypress(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_subKeyPressed
    
    private void fourKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fourKeyPressed
        keypress(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_fourKeyPressed
    
    private void fiveKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_fiveKeyPressed
        keypress(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_fiveKeyPressed
    
    private void sixKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_sixKeyPressed
        keypress(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_sixKeyPressed
    
    private void addKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_addKeyPressed
        keypress(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_addKeyPressed
    
    private void oneKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_oneKeyPressed
        keypress(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_oneKeyPressed
    
    private void twoKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_twoKeyPressed
        keypress(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_twoKeyPressed
    
    private void threeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_threeKeyPressed
        keypress(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_threeKeyPressed
    
    private void inverseKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_inverseKeyPressed
        keypress(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_inverseKeyPressed
    
    private void zeroKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_zeroKeyPressed
        keypress(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_zeroKeyPressed
    
    private void opositeKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_opositeKeyPressed
        keypress(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_opositeKeyPressed
    
    private void pointKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_pointKeyPressed
        keypress(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_pointKeyPressed
    
    private void equelKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_equelKeyPressed
        keypress(evt);        // TODO add your handling code here:
    }//GEN-LAST:event_equelKeyPressed
    public void keypress(java.awt.event.KeyEvent ke){
        int code = ke.getKeyCode();
        
        switch (code){
            case 96:
                resultText.setText(resultText.getText()+"0");
                isNumber = true;
                break;
            case 48:
                resultText.setText(resultText.getText()+"0");
                isNumber = true;
                break;
            case 97:
                resultText.setText(resultText.getText()+"1");
                isNumber = true;
                break;
            case 49:
                resultText.setText(resultText.getText()+"1");
                isNumber = true;
                break;
            case 98:
                resultText.setText(resultText.getText()+"2");
                isNumber = true;
                break;
            case 50:
                resultText.setText(resultText.getText()+"2");
                isNumber = true;
                break;
            case 99:
                resultText.setText(resultText.getText()+"3");
                isNumber = true;
                break;
            case 51:
                resultText.setText(resultText.getText()+"3");
                isNumber = true;
                break;
            case 100:
                resultText.setText(resultText.getText()+"4");
                isNumber = true;
                break;
            case 52:
                resultText.setText(resultText.getText()+"4");
                isNumber = true;
                break;
            case 101:
                resultText.setText(resultText.getText()+"5");
                isNumber = true;
                break;
            case 53:
                resultText.setText(resultText.getText()+"5");
                isNumber = true;
                break;
            case 102:
                resultText.setText(resultText.getText()+"6");
                isNumber = true;
                break;
            case 54:
                resultText.setText(resultText.getText()+"6");
                isNumber = true;
                break;
            case 103:
                resultText.setText(resultText.getText()+"7");
                isNumber = true;
                break;
            case 55:
                resultText.setText(resultText.getText()+"7");
                isNumber = true;
                break;
            case 104:
                resultText.setText(resultText.getText()+"8");
                isNumber = true;
                break;
            case 56:
                resultText.setText(resultText.getText()+"8");
                isNumber = true;
                break;
            case 105:
                resultText.setText(resultText.getText()+"9");
                isNumber = true;
                break;
            case 57:
                resultText.setText(resultText.getText()+"9");
                isNumber = true;
                break;
            case 110:
                if(dotUsed==false){
                    if (resultText.getText().length() == 0){
                        resultText.setText("0.");
                    }
                    else{
                        
                        
                        if(isNumber == false){
                            String a =resultText.getText().substring(0, resultText.getText().length()-1);
                            resultText.setText(a + ".");
                        }
                        else{
                            resultText.setText(resultText.getText()+".");
                        }
                    }
                    isNumber = false;
                    dotUsed = true;
                }
                break;
            case 46:
                if(dotUsed==false){
                    if (resultText.getText().length() == 0){
                        resultText.setText("0.");
                    }
                    else{
                        
                        
                        if(isNumber == false){
                            String a =resultText.getText().substring(0, resultText.getText().length()-1);
                            resultText.setText(a + ".");
                        }
                        else{
                            resultText.setText(resultText.getText()+".");
                        }
                    }
                    isNumber = false;
                    dotUsed = true;
                }
                break;
            case 44:
                if(dotUsed==false){
                    if (resultText.getText().length() == 0){
                        resultText.setText("0.");
                    }
                    else{
                        
                        
                        if(isNumber == false){
                            String a =resultText.getText().substring(0, resultText.getText().length()-1);
                            resultText.setText(a + ".");
                        }
                        else{
                            resultText.setText(resultText.getText()+".");
                        }
                    }
                    isNumber = false;
                    dotUsed = true;
                }
                break;
            case 106:
                multmethod();
                break;
            case 151:
                multmethod();
                break;
            case 107:
                addmethod();
                break;
            case 111:
                div();
                break;
            case 109:
                subMethod();
                break;
            case 10:
                equal();
                break;
            case 8:
                int a = resultText.getText().length();
                if (a != 0){
                    resultText.setText(resultText.getText().substring(0, resultText.getText().length()-1));
                }
                isNumber = true;
                a = resultText.getText().length();
                if (a == 0){
                    dotUsed = false;
                    isValue = false ;
                    
                }
                break;
                
        }
    }
    
    public BigDecimal calculate(BigDecimal val1, BigDecimal val2, int op){
        
        BigDecimal re = null;
        try{
            if(op == 0){
                re = val1.add(val2);
            }
            else if(op == 1){
                re = val1.subtract(val2);
            }
            else if(op == 2){
                re = val1.multiply(val2);
            }
            else if(op == 3){
                try{
                    try{
                        re = val1.divide(val2);
                    }
                    catch(ArithmeticException e){
                        re = val1.divide(val2,MathContext.DECIMAL64);
                    }
                }
                catch(ArithmeticException e){
                    re = new BigDecimal("0");
                }
            }
        }
        catch(NullPointerException e){
            re = new BigDecimal("0");
        }
        
        return re;
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
        * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
        */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(NewJFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new NewJFrame().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton add;
    private javax.swing.JButton clean;
    private javax.swing.JButton del;
    private javax.swing.JButton divide;
    private javax.swing.JButton eight;
    private javax.swing.JButton equel;
    private javax.swing.JButton five;
    private javax.swing.JButton four;
    private javax.swing.JButton inverse;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton mult;
    private javax.swing.JTextField multiresultText;
    private javax.swing.JButton nine;
    private javax.swing.JButton one;
    private javax.swing.JButton oposite;
    private javax.swing.JButton point;
    private javax.swing.JEditorPane resultText;
    private javax.swing.JButton seven;
    private javax.swing.JButton six;
    private javax.swing.JButton sub;
    private javax.swing.JButton three;
    private javax.swing.JButton two;
    private javax.swing.JButton zero;
    // End of variables declaration//GEN-END:variables
}
